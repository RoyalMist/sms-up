name: CI

on:
  push:
    branches: [main]
    tags:
      - "*"
  pull_request:
    branches: [main]

permissions:
  contents: read

env:
  OTP_VERSION: 27.2
  ELIXIR_VERSION: 1.18.1

jobs:
  qa:
    name: QA
    runs-on: ubuntu-22.04
    env:
      MIX_ENV: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}
      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ env.MIX_ENV }}-${{ runner.os }}-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ env.MIX_ENV }}-${{ runner.os }}-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-mix-
      - name: Install dependencies
        run: mix deps.get
      - name: Check Code Format
        run: mix format --dry-run --check-formatted
      - name: Check unused deps
        run: mix deps.unlock --check-unused
      - name: Deps audit
        run: mix do deps.audit, hex.audit
      - name: Run Credo
        run: mix credo
      - name: Run Sobelow
        run: mix sobelow --config
      - name: Run tests
        run: mix test --max-failures=1 --color

  build:
    name: BUILD
    needs: qa
    runs-on: ubuntu-22.04
    env:
      MIX_ENV: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}
      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ env.MIX_ENV }}-${{ runner.os }}-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ env.MIX_ENV }}-${{ runner.os }}-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-mix-
      - name: Install dependencies
        run: mix deps.get --only prod
      - name: Get branch name
        if: contains(github.ref, 'refs/tags/')
        uses: tj-actions/branch-names@v7
        id: branch-name
      - name: Set version
        if: contains(github.ref, 'refs/tags/')
        run: |
          sed -i 's/version: "[0-9]\.[0-9]\.[0-9]"/version: "${{ steps.branch-name.outputs.tag }}"/g' mix.exs
      - name: Build
        run: mix compile --warnings-as-errors
      - name: Publish
        if: contains(github.ref, 'refs/tags/')
        run: HEX_API_KEY=${{secrets.HEX_API_KEY}} mix hex.publish --yes
